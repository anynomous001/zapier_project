// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(cuid())
  email    String @unique
  name     String
  password String
  zaps     Zap[]
}

model Zap {
  id        String   @id @default(cuid())
  triggerId String
  trigger   Trigger?
  actions   Action[]
  zapRuns   ZapRun[]
  user      User     @relation(fields: [userId], references: [id])
  userId    String
}

model Trigger {
  id        String           @id @default(cuid())
  zapId     String           @unique
  triggerId String
  type      AvailableTrigger @relation(fields: [triggerId], references: [id])
  zap       Zap              @relation(fields: [zapId], references: [id])
}

model Action {
  id           String          @id @default(cuid())
  zapId        String
  actionId     String
  type         AvailableAction @relation(fields: [actionId], references: [id])
  zap          Zap             @relation(fields: [zapId], references: [id])
  sortingOrder Int             @default(0)
}

model AvailableTrigger {
  id       String    @id @default(cuid())
  name     String
  triggers Trigger[]
  imageUrl String    @default("")
}

model AvailableAction {
  id       String   @id @default(cuid())
  name     String
  actions  Action[]
  imageUrl String   @default("")
}

model ZapRun {
  id           String        @id @default(cuid())
  zapId        String
  zapRunOutbox ZapRunOutbox?
  metadata     Json
  zap          Zap           @relation(fields: [zapId], references: [id])
}

model ZapRunOutbox {
  id       String @id @default(cuid())
  zapRunId String @unique
  zapRun   ZapRun @relation(fields: [zapRunId], references: [id])
}
